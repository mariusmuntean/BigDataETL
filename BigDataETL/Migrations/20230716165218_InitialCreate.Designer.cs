// <auto-generated />
using System;
using BigDataETL.Data;
using BigDataETL.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BigDataETL.Migrations
{
    [DbContext(typeof(EtlDbContext))]
    [Migration("20230716165218_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "line_item_status", new[] { "li_s1", "li_s2", "li_s3" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "order_status", new[] { "os1", "os2", "os3" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BigDataETL.Data.Models.LineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<LineItemStatus>("Status")
                        .HasColumnType("line_item_status");

                    b.Property<DateTime>("UtcCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.LineItemEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<Guid>("LineItemId")
                        .HasColumnType("uuid");

                    b.Property<LineItemStatus?>("NewStatus")
                        .HasColumnType("line_item_status");

                    b.Property<LineItemStatus?>("PreviousStatus")
                        .HasColumnType("line_item_status");

                    b.Property<DateTime>("UtcCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.ToTable("LineItemEvents");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<OrderStatus>("Status")
                        .HasColumnType("order_status");

                    b.Property<DateTime>("UtcCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.OrderEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<OrderStatus?>("NewOrderStatus")
                        .HasColumnType("order_status");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<OrderStatus?>("PreviousStatus")
                        .HasColumnType("order_status");

                    b.Property<DateTime>("UtcCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderEvents");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.LineItem", b =>
                {
                    b.HasOne("BigDataETL.Data.Models.Order", "Order")
                        .WithMany("Type")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.LineItemEvent", b =>
                {
                    b.HasOne("BigDataETL.Data.Models.LineItem", "LineItem")
                        .WithMany("Events")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.OrderEvent", b =>
                {
                    b.HasOne("BigDataETL.Data.Models.Order", "Order")
                        .WithMany("Events")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.LineItem", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BigDataETL.Data.Models.Order", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
